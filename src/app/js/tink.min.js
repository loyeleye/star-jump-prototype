class Tink{constructor(e,t,s=1){this.element=t,this._scale=s,this.draggableSprites=[],this.pointers=[],this.buttons=[],this.PIXI=e,this.TextureCache=this.PIXI.utils.TextureCache,this.AnimatedSprite=this.PIXI.extras.MovieClip,this.Texture=this.PIXI.Texture}get scale(){return this._scale}set scale(e){this._scale=e,this.pointers.forEach(t=>t.scale=e)}makeDraggable(...e){if(e[0]instanceof Array){let t=e[0];if(t.length>0)for(let e=t.length-1;e>=0;e--){let s=t[e];this.draggableSprites.push(s),void 0===s.draggable&&(s.draggable=!0,s._localDraggableAllocation=!0)}}else e.forEach(e=>{this.draggableSprites.push(e),void 0===e.draggable&&(e.draggable=!0,e._localDraggableAllocation=!0)})}makeUndraggable(...e){if(e[0]instanceof Array){let t=e[0];if(t.length>0)for(let e=t.length-1;e>=0;e--){let s=t[e];this.draggableSprites.splice(this.draggableSprites.indexOf(s),1),!0===s._localDraggableAllocation&&(s.draggable=!1)}}else e.forEach(e=>{this.draggableSprites.splice(this.draggableSprites.indexOf(e),1),!0===e._localDraggableAllocation&&(e.draggable=!1)})}makePointer(e=this.element,t=this.scale){this.draggableSprites;let s=this.addGlobalPositionProperties,i={element:e,_scale:t,_x:0,_y:0,width:1,height:1,get x(){return this._x/this.scale},get y(){return this._y/this.scale},get centerX(){return this.x},get centerY(){return this.y},get position(){return{x:this.x,y:this.y}},get scale(){return this._scale},set scale(e){this._scale=e},get cursor(){return this.element.style.cursor},set cursor(e){this.element.style.cursor=e},isDown:!1,isUp:!0,tapped:!1,downTime:0,elapsedTime:0,press:void 0,release:void 0,tap:void 0,dragSprite:null,dragOffsetX:0,dragOffsetY:0,_visible:!0,get visible(){return this._visible},set visible(e){this.cursor=!0===e?"auto":"none",this._visible=e},moveHandler(e){let t=e.target;this._x=e.pageX-t.offsetLeft,this._y=e.pageY-t.offsetTop,e.preventDefault()},touchmoveHandler(e){let t=e.target;this._x=e.targetTouches[0].pageX-t.offsetLeft,this._y=e.targetTouches[0].pageY-t.offsetTop,e.preventDefault()},downHandler(e){this.isDown=!0,this.isUp=!1,this.tapped=!1,this.downTime=Date.now(),this.press&&this.press(),e.preventDefault()},touchstartHandler(e){let t=e.target;this._x=e.targetTouches[0].pageX-t.offsetLeft,this._y=e.targetTouches[0].pageY-t.offsetTop,this.isDown=!0,this.isUp=!1,this.tapped=!1,this.downTime=Date.now(),this.press&&this.press(),e.preventDefault()},upHandler(e){this.elapsedTime=Math.abs(this.downTime-Date.now()),this.elapsedTime<=200&&!1===this.tapped&&(this.tapped=!0,this.tap&&this.tap()),this.isUp=!0,this.isDown=!1,this.release&&this.release()},touchendHandler(e){this.elapsedTime=Math.abs(this.downTime-Date.now()),this.elapsedTime<=200&&!1===this.tapped&&(this.tapped=!0,this.tap&&this.tap()),this.isUp=!0,this.isDown=!1,this.release&&this.release()},hitTestSprite(e){s(e);let t,i,r=!1;if(void 0!==e.anchor?(t=e.width*e.anchor.x,i=e.height*e.anchor.y):(t=0,i=0),e.circular){let s=this.x-(e.gx+e.width/2-t),a=this.y-(e.gy+e.width/2-i);r=Math.sqrt(s*s+a*a)<e.width/2}else{let s=e.gx-t,a=e.gx+e.width-t,o=e.gy-i,n=e.gy+e.height-i;r=this.x>s&&this.x<a&&this.y>o&&this.y<n}return r}};return e.addEventListener("mousemove",i.moveHandler.bind(i),!1),e.addEventListener("mousedown",i.downHandler.bind(i),!1),window.addEventListener("mouseup",i.upHandler.bind(i),!1),e.addEventListener("touchmove",i.touchmoveHandler.bind(i),!1),e.addEventListener("touchstart",i.touchstartHandler.bind(i),!1),window.addEventListener("touchend",i.touchendHandler.bind(i),!1),e.style.touchAction="none",this.pointers.push(i),i}addGlobalPositionProperties(e){void 0===e.gx&&Object.defineProperty(e,"gx",{get:()=>e.getGlobalPosition().x}),void 0===e.gy&&Object.defineProperty(e,"gy",{get:()=>e.getGlobalPosition().y})}updateDragAndDrop(e){0===this.pointers.length&&this.makePointer(this.element,this.scale),this.pointers.forEach(t=>{if(t.isDown)if(null===t.dragSprite)for(let s=e.length-1;s>-1;s--){let i=e[s];if(t.hitTestSprite(i)&&i.draggable){t.dragOffsetX=t.x-i.gx,t.dragOffsetY=t.y-i.gy,t.dragSprite=i;let s=i.parent.children;s.splice(s.indexOf(i),1),s.push(i),e.splice(e.indexOf(i),1),e.push(i);break}}else t.dragSprite.x=t.x-t.dragOffsetX,t.dragSprite.y=t.y-t.dragOffsetY;t.isUp&&(t.dragSprite=null),e.some(e=>t.hitTestSprite(e)&&e.draggable?(t.visible&&(t.cursor="pointer"),!0):(t.visible&&(t.cursor="auto"),!1))})}makeInteractive(e){e.press=e.press||void 0,e.release=e.release||void 0,e.over=e.over||void 0,e.out=e.out||void 0,e.tap=e.tap||void 0,e.state="up",e.action="",e.pressed=!1,e.hoverOver=!1,e.tinkType="",e.enabled=!0,this.buttons.push(e)}updateButtons(){0===this.pointers.length&&this.makePointer(this.element,this.scale),this.pointers.forEach(e=>{e.shouldBeHand=!1,this.buttons.forEach(t=>{if(t.enabled){let s=e.hitTestSprite(t);e.isUp&&(t.state="up","button"===t.tinkType&&t.gotoAndStop(0)),s?(t.state="over",t.totalFrames&&3===t.totalFrames&&"button"===t.tinkType&&t.gotoAndStop(1),e.isDown&&(t.state="down","button"===t.tinkType&&(3===t.totalFrames?t.gotoAndStop(2):t.gotoAndStop(1))),e.shouldBeHand=!0,e.visible&&(e.cursor="pointer")):e.visible&&(e.cursor="auto"),"down"===t.state&&(t.pressed||(t.press&&t.press(),t.pressed=!0,t.action="pressed")),"over"===t.state&&(t.pressed&&(t.release&&t.release(),t.pressed=!1,t.action="released",e.tapped&&t.tap&&t.tap()),t.hoverOver||(t.over&&t.over(),t.hoverOver=!0)),"up"===t.state&&(t.pressed&&(t.release&&t.release(),t.pressed=!1,t.action="released"),t.hoverOver&&(t.out&&t.out(),t.hoverOver=!1))}}),e.shouldBeHand?e.cursor="pointer":e.cursor="auto"})}button(e,t=0,s=0){let i;return"string"==typeof e[0]?i=this.TextureCache[e[0]]?this.AnimatedSprite.fromFrames(e):this.AnimatedSprite.fromImages(e):e[0]instanceof this.Texture&&(i=new this.AnimatedSprite(e)),this.makeInteractive(i),i.tinkType="button",i.x=t,i.y=s,i}update(){0!==this.draggableSprites.length&&this.updateDragAndDrop(this.draggableSprites),0!==this.buttons.length&&this.updateButtons()}keyboard(e){let t={};return t.code=e,t.isDown=!1,t.isUp=!0,t.press=void 0,t.release=void 0,t.downHandler=(e=>{e.keyCode===t.code&&(t.isUp&&t.press&&t.press(),t.isDown=!0,t.isUp=!1),e.preventDefault()}),t.upHandler=(e=>{e.keyCode===t.code&&(t.isDown&&t.release&&t.release(),t.isDown=!1,t.isUp=!0),e.preventDefault()}),window.addEventListener("keydown",t.downHandler.bind(t),!1),window.addEventListener("keyup",t.upHandler.bind(t),!1),t}arrowControl(e,t){if(void 0===t)throw new Error("Please supply the arrowControl method with the speed at which you want the sprite to move");let s=this.keyboard(38),i=this.keyboard(39),r=this.keyboard(40),a=this.keyboard(37);a.press=(()=>{e.vx=-t,e.vy=0}),a.release=(()=>{i.isDown||0!==e.vy||(e.vx=0)}),s.press=(()=>{e.vy=-t,e.vx=0}),s.release=(()=>{r.isDown||0!==e.vx||(e.vy=0)}),i.press=(()=>{e.vx=t,e.vy=0}),i.release=(()=>{a.isDown||0!==e.vy||(e.vx=0)}),r.press=(()=>{e.vy=t,e.vx=0}),r.release=(()=>{s.isDown||0!==e.vx||(e.vy=0)})}}